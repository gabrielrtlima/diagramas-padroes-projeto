@startuml diagramaDeClasses
skinparam classAttributeIconSize 0

class BitmapItem{
    - bufferedImage : BufferedImage
    - imageName : String
    # {static} FILE : String
    # {static} NOTFOUND : String
    + BitmapItem(level : int, name : String)
    + BitmapItem()
    + getName() : String
    + getBoundingBox(graphics : Graphics, observer : ImageObserver, scale : float, myStyle : Style) : Rectangle
    + draw(x : int, y : int, scale : float, graphics : Graphics, myStyle : Style, observer : ImageObserver) : void
    + toString() : String
}
BitmapItem --|> SlideItem

class SlideViewerComponent{
    - {static} serialVersionUID : long
    - {static} BGCOLOR : Color
    - {static} COLOR : Color
    - {static} FONTNAME : String
    - {static} FONTSTYLE : int
    - {static} FONTHEIGHT : int
    - {static} XPOS : int
    - {static} YPOS : int
    - slide : Slide
    - labelFont : Font
    - presentation : Presentation
    - frame : JFrame
    + SlideViewerComponent(presentation : Presentation, frame : JFrame)
    + getPreferredSize() : Dimension
    + update(presentation : Presentation, slide : Slide) : void
    + paintComponent(graphics : Graphics) : void
}

class Presentation{
    - title : String
    - showList : ArrayList<Slide>
    - slideViewComponent : SlideViewerComponent
    - currentSlideNumber : int
    + Presentation()
    + Presentation(slideViewerComponent : SlideViewerComponent)
    + getSize() : int
    + getTitle() : String
    + setTitle(title : String) : void
    + setShowView(slideViewerComponent : SlideViewerComponent) : void
    + getSlideNumber() : int
    + setSlideNumber(number : int) : void
    + prevSlide() : void
    + nextSlide() : void
    clear() : void
    + append(slide : Slide) : void
    + getSlide(number : int) : Slide
    + getCurrentSlide() : Slide
    + exit(n : int) : void
}

class SlideViewerFrame{
    - {static} serialVersionUID : long
    - {static} JABTITLE : String
    + {static} WIDTH : int
    + {static} HEIGHT : int
    + SlideViewerFrame(title : String, presentation : Presentation)
    + setupWindow(slideViewerComponent : SlideViewerComponent, presentation : Presentation) : void
}

class TextItem{
    - text : String
    - {static} EMPTYTEXT : String
    + TextItem(level : int, string : String)
    + TextItem()
    + getText() : String
    + getAttributedString(style : Style, scale : float) : AttributedString
    + getBoundingBox(graphics : Graphics, observer : ImageObserver, scale : float, style : Style) : Rectangle
    + draw(x : int, y : int, scale : float, graphics : Graphics, style : Style, observer : ImageObserver) : void
    - getLayouts(graphics : Graphics, style : Style, scale : float) : List<TextLayout>
    + toString() : String
}
TextItem --|> SlideItem

class Style{
    - {static} styles : Style[]
    - {static} FONTNAME : String
    indent : int
    color : Color
    font : Font
    fontSize : int
    leading : int
    + Style(indent : int, color : Color, points : int, leading : int)
    + {static} createStyles() : void
    + {static} getStyle(level : int) : Style
    + toString() : String
    + getFont(scale : float) : Font
}

class AboutBox{
    + {static} show(parent : Frame) : void
}

class Slide{
    # title : TextItem
    # items : Vector<SlideItem>
    + Slide()
    + append(anItem : SlideItem) : void
    + getTitle() : String
    + setTitle(newTitle : String) : void
    + append(level : int, message : String) : void
    + getSlideItem(number : int) : SlideItem
    + getSlideItems() : Vector<SlideItem>
    + getSize() : int
    + draw(graphics : Graphics, area : Rectangle, imageObserver : ImageObserver) : void
    - getScale(area : Rectangle) : float
}

class XMLDataPresentation{
    # {static} DEFAULT_API_TO_USE : String
    # {static} SHOWTITLE : String
    # {static} SLIDETITLE : String
    # {static} SLIDE : String
    # {static} ITEM : String
    # {static} LEVEL : String
    # {static} KIND : String
    # {static} TEXT : String
    # {static} IMAGE : String
    # {static} PCE : String
    # {static} UNKNOWNTYPE : String
    # {static} NFE : String
    - getTitle(element : Element, tagName : String) : String
    + loadFile(presentation : Presentation, filename : String) : void
    # loadSlideItem(slide : Slide, item : Element) : void
    + saveFile(presentation : Presentation, filename : String) : void
}
XMLDataPresentation .down.|> IDataPresentation


class MenuController{
    - frame : Frame
    - presentation : Presentation
    - menuItem : MenuItem
    - {static} serialVersionUID : long
    # {static} ABOUT : String
    # {static} FILE : String
    # {static} EXIT : String
    # {static} GOTO : String
    # {static} HELP : String
    # {static} NEW : String
    # {static} NEXT : String
    # {static} OPEN : String
    # {static} PAGENR : String
    # {static} PREV : String
    # {static} SAVE : String
    # {static} VIEW : String
    # {static} TESTFILE : String
    # {static} SAVEFILE : String
    # {static} IOEX : String
    # {static} LOADERR : String
    # {static} SAVEERR : String
    + MenuController(frame : Frame, presentation : Presentation)
    + mkMenuItem(name : String) : MenuItem
    - addNewInFile(menu : Menu) : void
    - addOpenInFile(menu : Menu) : void
    - addSaveInFile(menu : Menu) : void
    - addExitInFile(menu : Menu) : void
    - addNextInView(menu : Menu) : void
    - addPrevInView(menu : Menu) : void
    - addGoToInView(menu : Menu) : void
    - addAboutInHelp(menu : Menu) : void
}

class DemoPresentation{
    + loadFile(presentation : Presentation, unusedFilename : String) : void
    + saveFile(presentation : Presentation, unusedFilename : String) : void
}
DemoPresentation .down.|> IDataPresentation

abstract class SlideItem{
    - level : int
    + SlideItem(level : int)
    + SlideItem()
    + getLevel() : int
    + {abstract} getBoundingBox(graphics : Graphics, observer : ImageObserver, scale : float, style : Style) : Rectangle
    + {abstract} draw(x : int, y : int, scale : float, graphics : Graphics, style : Style, observer : ImageObserver) : void
}

class JabberPointApplication{
    # {static} IOERR : String
    # {static} JABERR : String
    # {static} JABVERSION : String
    + {static} main(argv : String[]) : void
    + run(args : String) : void
}


class KeyController{
    - presentation : Presentation
    + KeyController(presentation : Presentation)
    + keyPressed(keyEvent : KeyEvent) : void
}

interface IDataPresentation{
    + {abstract} loadFile(presentation : Presentation, fileName : String) : void
    + {abstract} saveFile(presentation : Presentation, fileName : String) : void
}

Presentation -left- SlideViewerFrame
Presentation -up- SlideViewerComponent
MenuController -left- Presentation
SlideViewerFrame -down- MenuController
SlideViewerComponent -down- SlideViewerFrame
Presentation -down- KeyController
Presentation -right- Slide
Presentation -down- JabberPointApplication
XMLDataPresentation -up- JabberPointApplication
Slide -right- SlideItem
Style -down- SlideItem
KeyController -down- MenuController
MenuController -up- AboutBox

@enduml