@startuml DiagramaGeral
left to right direction
class AboutBox {

  + {static} show(parent : Frame) : void

}

abstract class Accessor {

  + {static} DEMO_NAME : String = "Apresentação de Demonstração"
  + {static} DEFAULT_EXTENSION : String = ".xml"

  + {static} getDemoAccessor() : Accessor
  + Accessor()
  + loadFile(presentation : Presentation, fileName : String) : void
  + saveFile(presentation : Presentation, fileName : String) : void

}

class BitmapItem {

  - bufferedImage : BufferedImage
  - imageName : String

  # {static} FILE : String = "Arquivo"
  # {static} NOTFOUND : String = "não encontrado"

  + BitmapItem(level : int, name : String)
  + BitmapItem()
  + getName() : String
  + getBoundingBox(g : Graphics, observer : ImageObserver, scale : float, myStyle : Style) : Rectangle
  + draw(x : int, y : int, scale : float, g : Graphics, myStyle : Style, observer : ImageObserver) : void
  + toString() : String

}

class DemoPresentation {

  + loadFile(presentation : Presentation, unusedFilename : String) : void
  + saveFile(presentation : Presentation, unusedFilename : String) : void

}

class KeyController {

  - presentation : Presentation

  + KeyController(p : Presentation)
  + keyPressed(keyEvent : KeyEvent) : void

}


class MenuController {

  - {static} serialVersionUID : Long = 227L
  - parent : Frame
  - presentation : Presentation

  # {static} ABOUT : String = "Sobre"
  # {static} FILE : String = "Arquivo"
  # {static} EXIT : String = "Sair"
  # {static} GOTO : String = "Pular para"
  # {static} HELP : String = "Ajuda"
  # {static} NEW : String = "Novo"
  # {static} NEXT : String = "Próximo"
  # {static} OPEN : String = "Abrir"
  # {static} PAGENR : String = "Número do Slide"
  # {static} PREV : String = "Anterior"
  # {static} SAVE : String = "Salvar"
  # {static} VIEW : String = "Visualizar"

  # {static} TESTFILE : String = "classpath:test.xml"
  # {static} SAVEFILE : String = "classpath:dump.xml"

  # {static} IOEX : String = "IO Exception: "
  # {static} LOADERR : String = "Erro ao carregar"
  # {static} SAVERR : String = "Erro ao salvar"

  + MenuController(frame : Frame, pres : Presentation)
  + mkMenuItem(name : String) : MenuItem

}

class Presentation {

  - title : String
  - showList : ArrayList<Slide>
  - currentSlideNumber : int = 0

  + Presentation()
  + Presentation(slideViewerComponent : SlideViewerComponent)
  + getSize() : int
  + getTitle() : String
  + setTitle() : void
  + setShowView(slideViewerComponent : SlideViewerComponent) : void
  + setSlideNumber(number : int) : void
  + prevSlide() : void
  + nextSlide() : void
  ~ clear() : void
  + append() : void
  + getSlide(number : int) : Slide
  + getCurrentSlide() : Slide
  + exit() : void

}

class Presentation {

  - title : String
  - showList : ArrayList<Slide>
  - currentSlideNumber : int = 0

  + Presentation()
  + Presentation(slideViewerComponent : SlideViewerComponent)
  + getSize() : int
  + getTitle() : String
  + setTitle() : void
  + setShowView(slideViewerComponent : SlideViewerComponent) : void
  + setSlideNumber(number : int) : void
  + prevSlide() : void
  + nextSlide() : void
  ~ clear() : void
  + append() : void
  + getSlide(number : int) : Slide
  + getCurrentSlide() : Slide
  + exit() : void

}

class Slide {

  + {static} WIDTH : int = 1200
  + {static} HEIGHT : int = 800

  # title : TextItem
  # items : Vector<SlideItem>

  + draw(g : Graphics, area : Rectangle, view : ImageObserver) : void
  - getScale(area : Rectangle) : float

}

abstract class SlideItem {

  - level : int = 0

  + SlideItem(lev : int)
  + SlideItem()
  + getLevel() : int
  + getBoundingBox(g : Graphics, observer : ImageObserver, scale : float, style Style)
  + draw(x : int, y : int, scale : float, g : Graphics, style : Style, observer : ImageObserver)

}

class SlideViewerComponent{

  - {static} serialVersionUID : long = 227L

  - {static} BGCOLOR : Color = Color.white
  - {static} COLOR : Color = Color.black
  - {static} FONTNAME : String = "Dialog"
  - {static} FONTSTYLE : int = Font.BOLD
  - {static} FONTHEIGHT : int = 10
  - {static} XPOS : int = 1100
  - {static} YPOS : int = 20

  - slide : Slide
  - labelFont : Font = null
  - presentation : Presentation = null
  - frame : JFrame = nul

  + SlideViewerComponent(pres : Presentation, frame : JFrame)
  + getPreferredSize() : Dimension
  + update(presentation : Presentation, data : Slide) : void
  + paintComponent(g : Graphics) : void

}

class SlideViewerFrame {

  - {static} serialVersionUID : long = 3227L

  - {static} JABTITLE : String = "Jabberpoint 1.6"

  + {static} WIDTH : int
  + {static} HEIGHT : int

  + SlideViewerFrame(title : String, presentation Presentation)
  + setupWindow(slideViewerComponent : SlideViewerComponent, presentation : Presentation)

}

class Style {

  - {static} styles : Style[]

  - {static} FONTNAME : String = "Helvetica"
  + indent : int
  + color : Color
  + font : Font
  + fontSize : int
  + leadgin : int

  + {static} getStyle(level : int) : Style
  + Style(indent : int, color : Color, points : int, leading : int)
  + toString() : String
  + getFont(scale : float) : Font

}

class TextItem {

  - text : String

  - {static} EMPTYTEXT : String = "No Text Given"

  + TextItem(level : int, string : String)
  + TextItem()
  + getText() : String
  + getAttributedString(style : Style, scale : float) : AttributedString
  + getBoundingBox(g : Graphics, observer ImageObserver, float : Scale, myStyle : Style) : Rectangle
  + draw(x : int, y : int, scale : float, g : Graphics, myStyle : Style, o : ImageObserver) : void
  - getLayouts(g : Graphics, s : Style, float scale) : List<TextLayout>
  + toString() : String

}

class XMLAccessor {

  # {static} DEFAULT_API_TO_USE : String = "dom"

  # {static} SHOWTITLE : String = "showtitle"
  # {static} SLIDETITLE : String = "slidetitle"
  # {static} SLIDE : String = "slide"
  # {static} ITEM : String = "item"
  # {static} LEVEL : String = "level"
  # {static} KIND : String = "kind"
  # {static} TEXT : String = "text"
  # {static} IMAGE : String = "image"

  # {static} PCE : String = "Parser Configuration Exception"
  # {static} UNKNOWNTYPE : String = "Unknown Element type"
  # {static} NFE : String = "Number Format Exception"

  - getTitle(element : Element, tagName : String) : String
  + loadFile(presentation Presentation, filename : String) : void
  # loadSlideItem(slide : Slide, item : Element) : void
  + saveFile(presentation : Presentation, filename : String) : void

}

SlideItem <|-- BitmapItem
Accessor <|-- DemoPresentation
SlideItem <|-- TextItem
Accessor <|-- XMLAccessor
SlideViewerFrame o-- Presentation

Accessor o-- Presentation
Presentation "- presentation" -- KeyController
Presentation "- presentation" -- MenuController
Presentation <|-- SlideViewerComponent
Style -- BitmapItem
Style -- TextItem
MenuController o-- AboutBox
SlideViewerComponent -- "- slide" Slide
TextItem "# title"-- Slide

@enduml
